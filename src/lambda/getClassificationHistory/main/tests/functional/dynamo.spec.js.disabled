const { DocumentClient } = require('aws-sdk/clients/dynamodb');
const { v4 } = require('uuid')
const tableName = 'triangleClassificationHistory'

const isTest = process.env.JEST_WORKER_ID;
const config = {
  convertEmptyValues: true,
  ...(isTest && {
    endpoint: 'localhost:8000',
    sslEnabled: false,
    region: 'local-env',
  }),
};

const dynamoClient = new DocumentClient(config);

it('should recover a list of items inserted into the table', async () => {
  try {
    const itemID = v4()

    const params = {
        TableName: tableName,
        Item: {
            id: itemID,
            dimension1: 1,
            dimension2: 2,
            dimension3: 3,
            classification: ['scalene'],
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString()
        }
    }

    await dynamoClient.put(params).promise();

    const data = await dynamoClient.scan({ 
      TableName: tableName, 
      ProjectionExpression: "id, dimension1, dimension2, dimension3, classification"
    }).promise();

    expect(data.Items).toEqual(
      [
        {
          id: itemID,
          dimension1: 1,
          dimension2: 2,
          dimension3: 3,
          classification: ['scalene']
        }
      ]
    );
  } catch (e) {
    console.log(e)
  }
});